/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AmbulanceDriver;

import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.AmbulanceOrganization;
import Business.Organization.Organization;
import Business.Patients.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientTransferRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kohli
 */
public class AmbulanceDashboardJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AmbulanceDashboard
     */
    
    private JPanel userProcessContainer;
    private Organization docOrganization;
    private Enterprise enterprise;
    private UserAccount account;
    private Doctor doctor;
    private EcoSystem business;
    
   
    public AmbulanceDashboardJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.business=business;
        populatePending();
        populateAccepted();
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAcceptedAmbulance = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        lblsubTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblpending = new javax.swing.JTable();
        lblAccepted = new javax.swing.JLabel();
        lblsubTitle1 = new javax.swing.JLabel();
        btnReject1 = new javax.swing.JButton();
        btnReject2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAcceptedAmbulance.setBackground(new java.awt.Color(255, 102, 51));
        tblAcceptedAmbulance.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        tblAcceptedAmbulance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hospital", "Patient", "Requested Date", "Message", "Staus"
            }
        ));
        tblAcceptedAmbulance.setGridColor(new java.awt.Color(255, 255, 255));
        tblAcceptedAmbulance.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tblAcceptedAmbulance.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblAcceptedAmbulance);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 500, 90));

        btnAccept.setBackground(new java.awt.Color(204, 255, 153));
        btnAccept.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 100, 30));

        btnReject.setBackground(new java.awt.Color(255, 153, 102));
        btnReject.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 160, 100, 30));

        lblsubTitle.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblsubTitle.setText("Accepted Requests");
        add(lblsubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        tblpending.setBackground(new java.awt.Color(255, 102, 51));
        tblpending.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        tblpending.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hospital", "Patient", "Requested Date", "Message", "Staus"
            }
        ));
        tblpending.setGridColor(new java.awt.Color(255, 255, 255));
        tblpending.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tblpending.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(tblpending);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 500, 90));

        lblAccepted.setBackground(new java.awt.Color(255, 153, 102));
        lblAccepted.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblAccepted.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAccepted.setIcon(new javax.swing.ImageIcon("C:\\Users\\foram\\Downloads\\siren.png")); // NOI18N
        lblAccepted.setText("AMBULANCE DRIVER WORK PANEL");
        lblAccepted.setOpaque(true);
        add(lblAccepted, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 70));

        lblsubTitle1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblsubTitle1.setText("Pending Requests");
        add(lblsubTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnReject1.setBackground(new java.awt.Color(255, 153, 102));
        btnReject1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnReject1.setText("Refresh");
        btnReject1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReject1ActionPerformed(evt);
            }
        });
        add(btnReject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 290, 100, 30));

        btnReject2.setBackground(new java.awt.Color(255, 153, 102));
        btnReject2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnReject2.setText("Completed");
        btnReject2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReject2ActionPerformed(evt);
            }
        });
        add(btnReject2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 250, -1, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnReject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReject1ActionPerformed
        // TODO add your handling code here:
        
        populateAccepted();
        populatePending();
    }//GEN-LAST:event_btnReject1ActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblpending.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a Row to process");
            return;
        }else{
            DefaultTableModel model = (DefaultTableModel) tblpending.getModel();
            WorkRequest workRequest = (WorkRequest)model.getValueAt(selectedRow, 3);

            //Add workrequest to garbageman queue
            workRequest.setReceiver(workRequest.getSender());
            workRequest.setStatus("Approved");
            JOptionPane.showMessageDialog(this, "Request approved");
            populateAccepted();
            populatePending();
        //
        }
        
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblpending.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a Row to process");
            return;
        }else{
            DefaultTableModel model = (DefaultTableModel) tblpending.getModel();
            WorkRequest workRequest = (WorkRequest)model.getValueAt(selectedRow, 3);

            //Add workrequest to garbageman queue
            workRequest.setReceiver(workRequest.getSender());
            workRequest.setStatus("Rejected");
            JOptionPane.showMessageDialog(this, "Request rejected");
            populateAccepted();
            populatePending();
        //
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnReject2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReject2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAcceptedAmbulance.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a Row to process");
            return;
        }else{
            DefaultTableModel model = (DefaultTableModel) tblAcceptedAmbulance.getModel();
            WorkRequest workRequest = (WorkRequest)model.getValueAt(selectedRow, 3);

            //Add workrequest to garbageman queue
            workRequest.setReceiver(workRequest.getSender());
            workRequest.setStatus("Completed");
            JOptionPane.showMessageDialog(this, "Request complete");
            populateAccepted();
            populatePending();
        //
        }
    }//GEN-LAST:event_btnReject2ActionPerformed


    public void populatePending(){
        DefaultTableModel model = (DefaultTableModel) tblpending.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest wq : account.getWorkQueue().getWorkRequestList()){
        
            if(!wq.getStatus().equals("Requested")){
                continue;
            }
            
            Object[] row = new Object[5];
            row[0] = ((PatientTransferRequest)wq).getToHospital();
            row[1] = ((PatientTransferRequest)wq).getPatient();
            row[2] = ((PatientTransferRequest)wq).getTime();
            row[3] = wq;
            row[4] = wq.getStatus();
            
            model.addRow(row);
        }
    }
    
    public void populateAccepted(){
        DefaultTableModel model = (DefaultTableModel) tblAcceptedAmbulance.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest wq : account.getWorkQueue().getWorkRequestList()){
            
            if(!wq.getStatus().equals("Approved")){
                continue;
            }
        
            Object[] row = new Object[5];
            row[0] = ((PatientTransferRequest)wq).getToHospital();
            row[1] = ((PatientTransferRequest)wq).getPatient();
            row[2] = ((PatientTransferRequest)wq).getTime();
            row[3] = wq;
            row[4] = wq.getStatus();
            model.addRow(row);
        }
    }

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnReject1;
    private javax.swing.JButton btnReject2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAccepted;
    private javax.swing.JLabel lblsubTitle;
    private javax.swing.JLabel lblsubTitle1;
    private javax.swing.JTable tblAcceptedAmbulance;
    private javax.swing.JTable tblpending;
    // End of variables declaration//GEN-END:variables
}
