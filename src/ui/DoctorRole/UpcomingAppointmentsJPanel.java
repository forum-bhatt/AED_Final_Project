/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.DoctorRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kohli
 */

public class UpcomingAppointmentsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpcomingAppoitnmentsJPanel
     */
    private JPanel CardLayoutJPanel;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount account;
    private EcoSystem business;
    
    public UpcomingAppointmentsJPanel(JPanel CardLayoutJPanel, UserAccount account, Organization organization, Enterprise enterprise,EcoSystem business) {
        initComponents();
        this.CardLayoutJPanel=CardLayoutJPanel;
        this.organization=organization;
        this.enterprise=enterprise;
        this.account=account;
        this.business=business;
        populateWorkAreaTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUpcomingAppointments = new javax.swing.JTable();
        btnCompleteAppointment = new javax.swing.JButton();
        btnRequestLab = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAcceptedAppointments = new javax.swing.JTable();
        btnPrescription = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAcceptedAppointments1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 153, 102));
        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel4.setText("Completed Appointments");
        jLabel4.setOpaque(true);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 230, 120));

        tblUpcomingAppointments.setBackground(new java.awt.Color(255, 204, 153));
        tblUpcomingAppointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient", "Time Slot", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUpcomingAppointments);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 490, 90));

        btnCompleteAppointment.setBackground(new java.awt.Color(255, 102, 51));
        btnCompleteAppointment.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnCompleteAppointment.setText("Complete Appointment");
        btnCompleteAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteAppointmentActionPerformed(evt);
            }
        });
        add(btnCompleteAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 230, 180, 20));

        btnRequestLab.setBackground(new java.awt.Color(255, 102, 51));
        btnRequestLab.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnRequestLab.setText("Request Lab Test");
        btnRequestLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestLabActionPerformed(evt);
            }
        });
        add(btnRequestLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, 130, 20));

        btnBack.setBackground(new java.awt.Color(255, 102, 51));
        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, 20));

        btnReject.setBackground(new java.awt.Color(255, 102, 51));
        btnReject.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, 120, 20));

        btnAccept.setBackground(new java.awt.Color(153, 255, 153));
        btnAccept.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 130, 20));

        tblAcceptedAppointments.setBackground(new java.awt.Color(255, 204, 153));
        tblAcceptedAppointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient", "Time Slot", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblAcceptedAppointments);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 490, 90));

        btnPrescription.setBackground(new java.awt.Color(255, 102, 51));
        btnPrescription.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnPrescription.setText("Prescription");
        btnPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescriptionActionPerformed(evt);
            }
        });
        add(btnPrescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 100, 20));

        jLabel5.setBackground(new java.awt.Color(255, 255, 204));
        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setText("Upcoming Appointments");
        jLabel5.setOpaque(true);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 120));

        tblAcceptedAppointments1.setBackground(new java.awt.Color(255, 204, 153));
        tblAcceptedAppointments1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient", "Time Slot", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblAcceptedAppointments1);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, 490, 90));

        jLabel6.setBackground(new java.awt.Color(255, 204, 153));
        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setText("Confirmed Appointments");
        jLabel6.setOpaque(true);
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 230, 120));
    }// </editor-fold>//GEN-END:initComponents

    public void populateWorkAreaTable(){
    
        DefaultTableModel model = (DefaultTableModel) tblUpcomingAppointments.getModel();
        
        //Delete empty rows
        model.setRowCount(0);
        
        for(WorkRequest workReq:account.getWorkQueue().getWorkRequestList()){
            
            Object[] row = new Object[3]; // Number of elements in the table - 6
            
            if(!workReq.getStatus().equals("Booked")){
                continue;
            }
            
            row[0] = workReq.getSender();
            row[1] = ((DoctorRequest)workReq).getTimeSlot();
            row[2] = workReq;
            model.addRow(row);
        }
        
    }

    public void populateApprovedWRTable(){
    
        DefaultTableModel model = (DefaultTableModel) tblAcceptedAppointments.getModel();
        
        //Delete empty rows
        model.setRowCount(0);
        
        for(WorkRequest workReq:account.getWorkQueue().getWorkRequestList()){
            
            Object[] row = new Object[3]; // Number of elements in the table - 6
            
            if(!workReq.getStatus().equals("Approved")){
                continue;
            }
            
            row[0] = workReq.getSender();
            row[1] = ((DoctorRequest)workReq).getTimeSlot();
            row[2] = workReq;
            model.addRow(row);
        }
        
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardLayoutJPanel.remove(this);
        CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
        layout.previous(CardLayoutJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblUpcomingAppointments.getSelectedRow();
        if(selectedRow < 0){            
            JOptionPane.showMessageDialog(this, "Please select a Row to process");
            return;
        }else{            
            DefaultTableModel model = (DefaultTableModel) tblUpcomingAppointments.getModel();
            WorkRequest workRequest = (WorkRequest)model.getValueAt(selectedRow, 2);

            //Add workrequest to garbageman queue
            workRequest.setReceiver(workRequest.getSender());
            workRequest.setStatus("Approved");
            JOptionPane.showMessageDialog(this, "Appointment accepted");
            populateWorkAreaTable();
            populateApprovedWRTable();
        }
        
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnCompleteAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteAppointmentActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblAcceptedAppointments.getSelectedRow();
        
        if(selectedRow < 0){
            
            JOptionPane.showMessageDialog(this, "Please select a Row to process");
            return;
        }else{
            
            DefaultTableModel model = (DefaultTableModel) tblAcceptedAppointments.getModel();
            WorkRequest workRequest = (WorkRequest)model.getValueAt(selectedRow, 2);

            workRequest.setReceiver(workRequest.getSender());
            workRequest.setStatus("Completed");
            JOptionPane.showMessageDialog(this, "Appointment completed");
            populateWorkAreaTable();
            populateApprovedWRTable();
        //
        }
        
    }//GEN-LAST:event_btnCompleteAppointmentActionPerformed

    private void btnRequestLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestLabActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAcceptedAppointments.getSelectedRow();
        
        if(selectedRow < 0){
            
            JOptionPane.showMessageDialog(this, "Please select a Row to process");
            return;
        }else{
            
           WorkRequest wq = (WorkRequest)tblAcceptedAppointments.getValueAt(selectedRow, 2);
           LabRequestJPanel labRequestPanel=new LabRequestJPanel(CardLayoutJPanel, account, organization, enterprise,business,wq);
           CardLayoutJPanel.add("LabRequestJPanel", labRequestPanel);
           CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
           layout.next(CardLayoutJPanel);
            
        }
     
    }//GEN-LAST:event_btnRequestLabActionPerformed

    private void btnPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescriptionActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblAcceptedAppointments.getSelectedRow();

        if(selectedRow < 0){

        JOptionPane.showMessageDialog(this, "Please select a Row to process");
        return;
        }else{

        WorkRequest wq = (WorkRequest)tblAcceptedAppointments.getValueAt(selectedRow, 2);
        PrescribeMedicinesJPanel prescribeMedicinesJPanel=new PrescribeMedicinesJPanel(CardLayoutJPanel, account, organization, enterprise,business,wq);
        CardLayoutJPanel.add("prescribeMedicinesJPanel", prescribeMedicinesJPanel);
        CardLayout layout = (CardLayout) CardLayoutJPanel.getLayout();
        layout.next(CardLayoutJPanel);
        }
    }//GEN-LAST:event_btnPrescriptionActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblUpcomingAppointments.getSelectedRow();

            if(selectedRow < 0){
                JOptionPane.showMessageDialog(this, "Please select a Row to process");
                return;
            }else{
                DefaultTableModel model = (DefaultTableModel) tblUpcomingAppointments.getModel();
                WorkRequest workRequest = (WorkRequest)model.getValueAt(selectedRow, 2);

                //Add workrequest to garbageman queue
                workRequest.setReceiver(workRequest.getSender());
                workRequest.setStatus("Rejected");
                JOptionPane.showMessageDialog(this, "Request rejected");
                populateWorkAreaTable();
                populateApprovedWRTable();
                //
            }
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompleteAppointment;
    private javax.swing.JButton btnPrescription;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnRequestLab;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblAcceptedAppointments;
    private javax.swing.JTable tblAcceptedAppointments1;
    private javax.swing.JTable tblUpcomingAppointments;
    // End of variables declaration//GEN-END:variables
}
